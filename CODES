1. TY Time Table using HTML and CSS/Bootstrap 

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>TY Timetable</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      padding: 20px;
      background: linear-gradient(to right, pink, #B5FFFC);
      font-family: 'Segoe UI', sans-serif;
    }

    .card {
      border-radius: 20px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      background-color: #fff;
    }

    h2 {
      text-align: center;
      margin: 30px 0;
      color: #4A4E69;
      font-weight: bold;
    }

    .table thead {
      background: linear-gradient(to right, #4A00E0, #8E2DE2);
      color: white;
      font-weight: bold;
    }

    .table td, .table th {
      text-align: center;
      vertical-align: middle;
    }

    .table tbody tr:hover {
      background-color: #f3f3f3;
      transition: background-color 0.3s;
    }

    .table tbody tr:nth-child(even) {
      background-color: #fff7e6;
    }

    .table tbody tr:nth-child(odd) {
      background-color: #e6f9ff;
    }

    .break {
      background-color: #f8d7da !important;
      font-weight: bold;
      color: #721c24;
    }

    .lunch {
      background-color: #d4edda !important;
      font-weight: bold;
      color: #155724;
    }

    .lab {
  background-color: yellowgreen !important;
}

    }
  </style>
</head>
<body>

  <div class="container">
    <h2>Third Year Timetable</h2>
    <div class="card p-3">
      <div class="table-responsive">
        <table class="table table-bordered table-hover">
          <thead>
            <tr>
              <th>Day</th>
              <th>9:00 - 10:00</th>
              <th>10:00 - 11:00</th>
              <th>11:00 - 11:10</th>
              <th>11:10 - 12:10</th>
              <th>12:10 - 1:10</th>
              <th>1:10 - 2:10</th>
              <th>2:10 - 3:10</th>
              <th>3:10 - 4:10</th>
              <th>4:10 - 5:10</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>Monday</td>
              <td>OS (MB)</td>
              <td>PM (BD)</td>
              <td class="break">Short Break</td>
              <td>RS & GIS (PM)</td>
              <td>PDT</td>
              <td class="lunch">Lunch Break</td>
              <td class="lab">PBL-IV(IVP) (DP)</td>
              <td class="lab">PBL-IV(IVP) (DP)</td>
              <td>TS</td>
            </tr>
            <tr>
              <td>Tuesday</td>
              <td>OS (MB)</td>
              <td>PDT (BD)</td>
              <td class="break">Short Break</td>
              <td>RS & GIS (PM)</td>
              <td>PDT</td>
              <td class="lunch">Lunch Break</td>
              <td>SDL (SK)</td>
              <td>SDL (SK)</td>
              <td>PM (BD)</td>
            </tr>
            <tr>
              <td>Wednesday</td>
              <td>OS-Lab (BM)</td>
              <td>OS-Lab (BM)</td>
              <td class="break">Short Break</td>
              <td>RS & GIS (PM)</td>
              <td>CPFEV (KP)</td>
              <td class="lunch">Lunch Break</td>
              <td>SDL (SK)</td>
              <td>SDL (SK)</td>
              <td>TS</td>
            </tr>
            <tr>
              <td>Thursday</td>
              <td>TS</td>
              <td>PM (BD)</td>
              <td class="break">Short Break</td>
              <td>RS & GIS (PM)</td>
              <td>PDT</td>
              <td class="lunch">Lunch Break</td>
              <td class="lab">PBL-IV (ML) (PS)</td>
              <td class="lab">PBL-IV (ML) (PS)</td>
              <td>PM (BD)</td>
            </tr>
            <tr>
              <td>Friday</td>
              <td>OS Lab (MS)</td>
              <td>OS Lab (MS)</td>
              <td class="break">Short Break</td>
              <td>CPFEV (KP)</td>
              <td>IVP (NG)</td>
              <td class="lunch">Lunch Break</td>
              <td>AJP (GS)</td>
              <td>AJP (GS)</td>
              <td></td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>

</body>
</html>

2. Design a railway Time Table using HTML and CSS.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Railway Time Table</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background: #f1f1f1;
      padding: 20px;
    }
    h1 {
      text-align: center;
      color: #2c3e50;
    }
    table {
      width: 90%;
      margin: auto;
      border-collapse: collapse;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
      background: white;
    }
    th, td {
      padding: 15px;
      text-align: center;
      border-bottom: 1px solid #ddd;
    }
    th {
      background-color: #2980b9;
      color: white;
    }
    tr:nth-child(even) {
      background-color: #f9f9f9;
    }
    tr:hover {
      background-color: #f1f1f1;
    }
  </style>
</head>
<body>
  <h1>Railway Time Table</h1>
  <table>
    <tr>
      <th>Train Name</th>
      <th>Train Number</th>
      <th>Source</th>
      <th>Destination</th>
      <th>Arrival</th>
      <th>Departure</th>
      <th>Days</th>
    </tr>
    <tr>
      <td>Rajdhani Express</td>
      <td>12301</td>
      <td>Mumbai</td>
      <td>Delhi</td>
      <td>08:30 AM</td>
      <td>09:00 AM</td>
      <td>Mon, Wed, Fri</td>
    </tr>
    <tr>
      <td>Shatabdi Express</td>
      <td>12001</td>
      <td>Pune</td>
      <td>Chennai</td>
      <td>06:00 AM</td>
      <td>06:30 AM</td>
      <td>All Days</td>
    </tr>
    <tr>
      <td>Duronto Express</td>
      <td>12201</td>
      <td>Delhi</td>
      <td>Bangalore</td>
      <td>10:00 PM</td>
      <td>10:30 PM</td>
      <td>Tue, Thu, Sat</td>
    </tr>
  </table>
</body>
</html>


3. Design a facebook registration form and Apply field level validation using javascript for Facebook registration form.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Facebook Registration</title>
  <style>
    body {
      font-family: Arial;
      background: #f0f2f5;
      padding: 30px;
    }
    .container {
      background: white;
      width: 400px;
      margin: auto;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 15px rgba(0,0,0,0.1);
    }
    input, select {
      width: 100%;
      padding: 10px;
      margin-top: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
    }
    label {
      font-weight: bold;
    }
    .error {
      color: red;
      font-size: 12px;
    }
    button {
      background: #1877f2;
      color: white;
      padding: 10px;
      width: 100%;
      border: none;
      border-radius: 5px;
      margin-top: 15px;
      font-size: 16px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>Facebook Registration</h2>
    <form id="fbForm">
      <label>Full Name</label>
      <input type="text" id="name" required>
      <div class="error" id="nameError"></div>

      <label>Email</label>
      <input type="email" id="email" required>
      <div class="error" id="emailError"></div>

      <label>Password</label>
      <input type="password" id="password" required>
      <div class="error" id="passError"></div>

      <label>Gender</label>
      <select id="gender" required>
        <option value="">Select</option>
        <option>Male</option>
        <option>Female</option>
        <option>Other</option>
      </select>
      <div class="error" id="genderError"></div>

      <button type="submit">Register</button>
    </form>
  </div>

  <script>
    document.getElementById("fbForm").addEventListener("submit", function(e){
      e.preventDefault();
      let valid = true;

      if(document.getElementById("name").value === "") {
        document.getElementById("nameError").textContent = "Name is required.";
        valid = false;
      } else document.getElementById("nameError").textContent = "";

      const emailVal = document.getElementById("email").value;
      if(emailVal === "" || !emailVal.includes("@")) {
        document.getElementById("emailError").textContent = "Valid email required.";
        valid = false;
      } else document.getElementById("emailError").textContent = "";

      if(document.getElementById("password").value.length < 6) {
        document.getElementById("passError").textContent = "Min 6 characters.";
        valid = false;
      } else document.getElementById("passError").textContent = "";

      if(document.getElementById("gender").value === "") {
        document.getElementById("genderError").textContent = "Please select gender.";
        valid = false;
      } else document.getElementById("genderError").textContent = "";

      if(valid) alert("Registered Successfully!");
    });
  </script>
</body>
</html>


4. Design a Registration form for Gmail and Apply Submit level validation
using javascript .


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Facebook Registration</title>
  <style>
    body {
      font-family: Arial;
      background: #f0f2f5;
      padding: 30px;
    }
    .container {
      background: white;
      width: 400px;
      margin: auto;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 15px rgba(0,0,0,0.1);
    }
    input, select {
      width: 100%;
      padding: 10px;
      margin-top: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
    }
    label {
      font-weight: bold;
    }
    .error {
      color: red;
      font-size: 12px;
    }
    button {
      background: #1877f2;
      color: white;
      padding: 10px;
      width: 100%;
      border: none;
      border-radius: 5px;
      margin-top: 15px;
      font-size: 16px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>Facebook Registration</h2>
    <form id="fbForm">
      <label>Full Name</label>
      <input type="text" id="name" required>
      <div class="error" id="nameError"></div>

      <label>Email</label>
      <input type="email" id="email" required>
      <div class="error" id="emailError"></div>

      <label>Password</label>
      <input type="password" id="password" required>
      <div class="error" id="passError"></div>

      <label>Gender</label>
      <select id="gender" required>
        <option value="">Select</option>
        <option>Male</option>
        <option>Female</option>
        <option>Other</option>
      </select>
      <div class="error" id="genderError"></div>

      <button type="submit">Register</button>
    </form>
  </div>

  <script>
    document.getElementById("fbForm").addEventListener("submit", function(e){
      e.preventDefault();
      let valid = true;

      if(document.getElementById("name").value === "") {
        document.getElementById("nameError").textContent = "Name is required.";
        valid = false;
      } else document.getElementById("nameError").textContent = "";

      const emailVal = document.getElementById("email").value;
      if(emailVal === "" || !emailVal.includes("@")) {
        document.getElementById("emailError").textContent = "Valid email required.";
        valid = false;
      } else document.getElementById("emailError").textContent = "";

      if(document.getElementById("password").value.length < 6) {
        document.getElementById("passError").textContent = "Min 6 characters.";
        valid = false;
      } else document.getElementById("passError").textContent = "";

      if(document.getElementById("gender").value === "") {
        document.getElementById("genderError").textContent = "Please select gender.";
        valid = false;
      } else document.getElementById("genderError").textContent = "";

      if(valid) alert("Registered Successfully!");
    });
  </script>
</body>
</html>
5. Create a 3 page website using HTML and Bootstrap for Online shopping of garments.

index.html (Homepage)
<!-- index.html -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Garment Store - Home</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark px-4">
    <a class="navbar-brand" href="#">GarmentStore</a>
    <div class="collapse navbar-collapse">
      <ul class="navbar-nav ms-auto">
        <li class="nav-item"><a class="nav-link" href="index.html">Home</a></li>
        <li class="nav-item"><a class="nav-link" href="products.html">Products</a></li>
        <li class="nav-item"><a class="nav-link" href="contact.html">Contact</a></li>
      </ul>
    </div>
  </nav>

  <div class="container text-center mt-5">
    <h1>Welcome to GarmentStore</h1>
    <p class="lead">Find the latest fashion in men and women wear!</p>
    <a href="products.html" class="btn btn-primary">Explore Products</a>
  </div>

  <footer class="bg-dark text-white text-center py-3 mt-5">
    &copy; 2025 GarmentStore | Fashion for All
  </footer>
</body>
</html>


🔷 products.html
<!-- products.html -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Products - GarmentStore</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark px-4">
    <a class="navbar-brand" href="#">GarmentStore</a>
    <div class="collapse navbar-collapse">
      <ul class="navbar-nav ms-auto">
        <li class="nav-item"><a class="nav-link" href="index.html">Home</a></li>
        <li class="nav-item"><a class="nav-link active" href="#">Products</a></li>
        <li class="nav-item"><a class="nav-link" href="contact.html">Contact</a></li>
      </ul>
    </div>
  </nav>

  <div class="container my-5">
    <h2 class="text-center mb-4">Our Bestsellers</h2>
    <div class="row g-4">
      <div class="col-md-4">
        <div class="card">
          <img src="https://via.placeholder.com/300x200?text=Men+T-Shirt" class="card-img-top" alt="T-Shirt">
          <div class="card-body">
            <h5 class="card-title">Men's T-Shirt</h5>
            <p class="card-text">₹699</p>
            <a href="#" class="btn btn-success">Add to Cart</a>
          </div>
        </div>
      </div>

      <div class="col-md-4">
        <div class="card">
          <img src="https://via.placeholder.com/300x200?text=Women+Dress" class="card-img-top" alt="Dress">
          <div class="card-body">
            <h5 class="card-title">Women's Dress</h5>
            <p class="card-text">₹1299</p>
            <a href="#" class="btn btn-success">Add to Cart</a>
          </div>
        </div>
      </div>

      <div class="col-md-4">
        <div class="card">
          <img src="https://via.placeholder.com/300x200?text=Jeans" class="card-img-top" alt="Jeans">
          <div class="card-body">
            <h5 class="card-title">Unisex Jeans</h5>
            <p class="card-text">₹999</p>
            <a href="#" class="btn btn-success">Add to Cart</a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <footer class="bg-dark text-white text-center py-3">
    &copy; 2025 GarmentStore | Made with ❤️
  </footer>
</body>
</html>


🔷 contact.html
<!-- contact.html -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Contact Us - GarmentStore</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark px-4">
    <a class="navbar-brand" href="#">GarmentStore</a>
    <div class="collapse navbar-collapse">
      <ul class="navbar-nav ms-auto">
        <li class="nav-item"><a class="nav-link" href="index.html">Home</a></li>
        <li class="nav-item"><a class="nav-link" href="products.html">Products</a></li>
        <li class="nav-item"><a class="nav-link active" href="#">Contact</a></li>
      </ul>
    </div>
  </nav>

  <div class="container my-5">
    <h2 class="text-center">Contact Us</h2>
    <form class="mt-4">
      <div class="mb-3">
        <label class="form-label">Name</label>
        <input type="text" class="form-control" required>
      </div>
      <div class="mb-3">
        <label class="form-label">Email</label>
        <input type="email" class="form-control" required>
      </div>
      <div class="mb-3">
        <label class="form-label">Message</label>
        <textarea class="form-control" rows="4" required></textarea>
      </div>
      <button type="submit" class="btn btn-danger">Submit</button>
    </form>
  </div>

  <footer class="bg-dark text-white text-center py-3 mt-5">
    &copy; 2025 GarmentStore | Let’s Talk Fashion
  </footer>
</body>
</html>



6. Design a calculator using javascript.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Calculator</title>
  <style>
    body {
      background: #f0f0f0;
      display: flex;
      height: 100vh;
      justify-content: center;
      align-items: center;
      font-family: 'Segoe UI', sans-serif;
    }

    .calculator {
      background: #222;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 0 15px rgba(0,0,0,0.4);
    }

    input[type="text"] {
      width: 100%;
      padding: 15px;
      font-size: 22px;
      border: none;
      border-radius: 6px;
      margin-bottom: 10px;
      text-align: right;
    }

    .buttons {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 12px;
    }

    .buttons button {
      padding: 18px;
      font-size: 18px;
      border: none;
      border-radius: 6px;
      background: #444;
      color: #fff;
      cursor: pointer;
    }

    .buttons button:hover {
      background: #666;
    }

    .buttons .equal {
      background: #0d6efd;
      grid-column: span 2;
    }

    .buttons .equal:hover {
      background: #005ce6;
    }
  </style>
</head>
<body>

  <div class="calculator">
    <input type="text" id="result" readonly>
    <div class="buttons">
      <button onclick="clearResult()">C</button>
      <button onclick="append('%')">%</button>
      <button onclick="append('/')">/</button>
      <button onclick="append('*')">x</button>

      <button onclick="append('7')">7</button>
      <button onclick="append('8')">8</button>
      <button onclick="append('9')">9</button>
      <button onclick="append('-')">-</button>

      <button onclick="append('4')">4</button>
      <button onclick="append('5')">5</button>
      <button onclick="append('6')">6</button>
      <button onclick="append('+')">+</button>

      <button onclick="append('1')">1</button>
      <button onclick="append('2')">2</button>
      <button onclick="append('3')">3</button>
      <button onclick="calculate()" class="equal">=</button>

      <button onclick="append('0')">0</button>
      <button onclick="append('.')">.</button>
    </div>
  </div>

  <script>
    const result = document.getElementById("result");

    function append(value) {
      result.value += value;
    }

    function clearResult() {
      result.value = "";
    }

    function calculate() {
      try {
        result.value = eval(result.value);
      } catch {
        result.value = "Error";
      }
    }
  </script>

</body>
</html>


7. Link a JS file into a HTML file, put an alert, calculate average number of
weeks in human lifetime, create variables to store a string, program that
tells time of the day (morning, afternoon, night), etc.

Index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>JavaScript Demo</title>
</head>
<body>
  <h1>JavaScript Link and Time Display</h1>
  <p id="timeMsg"></p>
  <script src="script.js"></script>
</body>
</html>

script.js
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>JavaScript Demo</title>
</head>
<body>
  <h1>JavaScript Link and Time Display</h1>
  <p id="timeMsg"></p>
  <script src="script.js"></script>
</body>
</html>

8. Develop a app using PHP and MySQl for Complaint Management System.

CREATE DATABASE complaints_db;
USE complaints_db;

CREATE TABLE complaints (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    email VARCHAR(100),
    complaint TEXT,
    status VARCHAR(20) DEFAULT 'Pending',
    date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
Database Connection (db.php):

php
Copy
Edit
<?php
$conn = new mysqli('localhost', 'root', '', 'complaints_db');
if ($conn->connect_error) {
    die('Connection failed: ' . $conn->connect_error);
}
?>
Add Complaint Form (add_complaint.php):

php
Copy
Edit
<form action="submit_complaint.php" method="POST">
    Name: <input type="text" name="name"><br>
    Email: <input type="email" name="email"><br>
    Complaint: <textarea name="complaint"></textarea><br>
    <button type="submit">Submit Complaint</button>
</form>

Submit Complaint (submit_complaint.php):

php
Copy
Edit
<?php
include('db.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $complaint = $_POST['complaint'];

    $sql = "INSERT INTO complaints (name, email, complaint, status) VALUES ('$name', '$email', '$complaint', 'Pending')";
    if ($conn->query($sql) === TRUE) {
        echo "Complaint submitted successfully.";
    } else {
        echo "Error: " . $conn->error;
    }
}
?>
Display Complaints (view_complaints.php):

php
Copy
Edit
<?php
include('db.php');

$result = $conn->query("SELECT * FROM complaints");

while ($row = $result->fetch_assoc()) {
    echo $row['name'] . " (" . $row['status'] . "): " . $row['complaint'] . "<br>";
}
?>



9. Develop a app using PHP and MySQl for Toll Tax Management System.

CREATE DATABASE toll_db;
USE toll_db;

CREATE TABLE vehicles (
    id INT AUTO_INCREMENT PRIMARY KEY,
    vehicle_number VARCHAR(20),
    vehicle_type VARCHAR(50),
    toll_amount DECIMAL(10,2),
    entry_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

Database Connection (db.php):

php
Copy
Edit
<?php
$conn = new mysqli('localhost', 'root', '', 'toll_db');
if ($conn->connect_error) {
    die('Connection failed: ' . $conn->connect_error);
}
?>
Add Vehicle (add_vehicle.php):

php
Copy
Edit
<form action="submit_vehicle.php" method="POST">
    Vehicle Number: <input type="text" name="vehicle_number"><br>
    Vehicle Type: <select name="vehicle_type">
        <option value="car">Car</option>
        <option value="truck">Truck</option>
        <option value="bike">Bike</option>
    </select><br>
    <button type="submit">Submit Vehicle</button>
</form>

Submit Vehicle Data (submit_vehicle.php):

php
Copy
Edit
<?php
include('db.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $vehicle_number = $_POST['vehicle_number'];
    $vehicle_type = $_POST['vehicle_type'];
    $toll_amount = ($vehicle_type == 'car') ? 50 : (($vehicle_type == 'truck') ? 100 : 30);

    $sql = "INSERT INTO vehicles (vehicle_number, vehicle_type, toll_amount) VALUES ('$vehicle_number', '$vehicle_type', '$toll_amount')";
    if ($conn->query($sql) === TRUE) {
        echo "Vehicle data submitted successfully.";
    } else {
        echo "Error: " . $conn->error;
    }
}
?>
View Vehicles and Toll Charges (view_vehicles.php):

php
Copy
Edit
<?php
include('db.php');

$result = $conn->query("SELECT * FROM vehicles");

while ($row = $result->fetch_assoc()) {
    echo $row['vehicle_number'] . " (" . $row['vehicle_type'] . "): " . $row['toll_amount'] . "<br>";
}
?>


10.Develop a app using PHP and MySQL for Pharmacy Management System.
CREATE DATABASE pharmacy_db;
USE pharmacy_db;

CREATE TABLE medicines (
    id INT AUTO_INCREMENT PRIMARY KEY,
    medicine_name VARCHAR(100),
    quantity INT,
    price DECIMAL(10,2),
    date_added TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

Db.php
<?php
$conn = new mysqli('localhost', 'root', '', 'pharmacy_db');
if ($conn->connect_error) {
    die('Connection failed: ' . $conn->connect_error);
}
?>

Add_medicine.php
<form action="submit_medicine.php" method="POST">
    Medicine Name: <input type="text" name="medicine_name"><br>
    Quantity: <input type="number" name="quantity"><br>
    Price: <input type="number" name="price"><br>
    <button type="submit">Add Medicine</button>
</form>

Sbmit_medicine.php
<?php
include('db.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $medicine_name = $_POST['medicine_name'];
    $quantity = $_POST['quantity'];
    $price = $_POST['price'];

    $sql = "INSERT INTO medicines (medicine_name, quantity, price) VALUES ('$medicine_name', '$quantity', '$price')";
    if ($conn->query($sql) === TRUE) {
        echo "Medicine added successfully.";
    } else {
        echo "Error: " . $conn->error;
    }
}
?>

view_medicine.php
<?php
include('db.php');

$result = $conn->query("SELECT * FROM medicines");

while ($row = $result->fetch_assoc()) {
    echo $row['medicine_name'] . " - " . $row['quantity'] . " units - $" . $row['price'] . "<br>";
}
?>


11.Develop a app using PHP and MySQl for College Admission Management
System.

CREATE DATABASE college_db;
USE college_db;

CREATE TABLE students (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    course VARCHAR(100),
    admission_status VARCHAR(20) DEFAULT 'Pending',
    applied_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

Database Connection (db.php):

php
Copy
Edit
<?php
$conn = new mysqli('localhost', 'root', '', 'college_db');
if ($conn->connect_error) {
    die('Connection failed: ' . $conn->connect_error);
}
?>
Add Student (add_student.php):

php
Copy
Edit
<form action="submit_student.php" method="POST">
    Name: <input type="text" name="name"><br>
    Course: <input type="text" name="course"><br>
    <button type="submit">Submit Admission</button>
</form>
Submit Student Data (submit_student.php):

php
Copy
Edit
<?php
include('db.php');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = $_POST['name'];
    $course = $_POST['course'];

    $sql = "INSERT INTO students (name, course, admission_status) VALUES ('$name', '$course', 'Pending')";
    if ($conn->query($sql) === TRUE) {
        echo "Admission submitted successfully.";
    } else {
        echo "Error: " . $conn->error;
    }
}
?>
View Students (view_students.php):

php
Copy
Edit
<?php
include('db.php');

$result = $conn->query("SELECT * FROM students");

while ($row = $result->fetch_assoc()) {
    echo $row['name'] . " (" . $row['course'] . "): " . $row['admission_status'] . "<br>";
}
?>


12. Create simple HTML forms with input elements and a button.

<form>
  <label>Full Name: <input type="text" name="name" required></label><br><br>
  <label>Email: <input type="email" name="email" required></label><br><br>
  <label>Phone Number: <input type="tel" name="phone" pattern="[0-9]{10}" required></label><br><br>
  <label>Password: <input type="password" name="password" required></label><br><br>
  <button type="submit">Submit</button>
</form>


13. Write Javascript functions that are used as event handlers.
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Alert & Background Change</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      padding-top: 100px;
      transition: background 0.5s ease;
    }

    button {
      padding: 12px 25px;
      font-size: 18px;
      color: white;
      background-color: #007BFF;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      box-shadow: 0 4px 8px rgba(0,0,0,0.2);
      transition: background 0.3s ease;
    }

    button:hover {
      background-color: #0056b3;
    }
  </style>
</head>
<body>

  <h1>Click the Button to Change Background</h1>
  <button onclick="showAlert()">Click Me</button>

  <script>
    function showAlert() {
      alert("You clicked the button!");
      document.body.style.background = "linear-gradient(to right, #ff6a00, #ee0979)";
    }
  </script>

</body>
</html>

14.Create Fibonacci series in JavaScript and display on HTML

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Fibonacci Series</title>
</head>
<body>

  <h3>Fibonacci Series:</h3>
  <p id="fibSeries"></p>

  <script>
    let fib = [0, 1];
    for (let i = 2; i < 10; i++) {
      fib[i] = fib[i - 1] + fib[i - 2];
    }
    document.getElementById("fibSeries").innerText = fib.join(', ');
  </script>

</body>
</html>

15.Create sign up page and display name after login(username &amp;
Password) with Validation.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Signup and Login</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f9;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }
    .container {
      background-color: white;
      padding: 30px;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      width: 300px;
    }
    h2 {
      text-align: center;
    }
    input {
      width: 100%;
      padding: 10px;
      margin: 10px 0;
      border: 1px solid #ccc;
      border-radius: 4px;
    }
    button {
      width: 100%;
      padding: 10px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
    button:hover {
      background-color: #45a049;
    }
    .error {
      color: red;
      font-size: 12px;
      text-align: center;
    }
    .hidden {
      display: none;
    }
  </style>
</head>
<body>

  <div class="container">
    <div id="signupContainer">
      <h2>Signup</h2>
      <form id="signupForm" onsubmit="return validateSignup()">
        <input type="text" id="signupUsername" placeholder="Username" required>
        <input type="password" id="signupPassword" placeholder="Password" required>
        <button type="submit">Sign Up</button>
        <p class="error" id="signupError"></p>
      </form>
    </div>
    
    <div id="loginContainer" class="hidden">
      <h2>Login</h2>
      <form id="loginForm" onsubmit="return validateLogin()">
        <input type="text" id="loginUsername" placeholder="Username" required>
        <input type="password" id="loginPassword" placeholder="Password" required>
        <button type="submit">Login</button>
        <p class="error" id="loginError"></p>
      </form>
      <p id="welcomeMessage" class="hidden"></p>
    </div>
  </div>

  <script>
    function validateSignup() {
      const username = document.getElementById("signupUsername").value;
      const password = document.getElementById("signupPassword").value;
      
      if (username === "" || password === "") {
        document.getElementById("signupError").innerText = "Both fields are required!";
        return false;
      }

      // Store username and password in localStorage
      localStorage.setItem("username", username);
      localStorage.setItem("password", password);

      alert("Signup successful! Redirecting to login page...");
      
      // Show login page and hide signup page
      document.getElementById("signupContainer").classList.add("hidden");
      document.getElementById("loginContainer").classList.remove("hidden");

      return false;  // Prevent form submission
    }

    function validateLogin() {
      const username = document.getElementById("loginUsername").value;
      const password = document.getElementById("loginPassword").value;
      const storedUser = localStorage.getItem("username");
      const storedPass = localStorage.getItem("password");

      if (username === storedUser && password === storedPass) {
        document.getElementById("welcomeMessage").innerText = `Welcome, ${username}!`;
        document.getElementById("welcomeMessage").classList.remove("hidden");
        return false;  // Prevent form submission
      } else {
        document.getElementById("loginError").innerText = "Invalid username or password!";
        return false;  // Prevent form submission
      }
    }
  </script>

</body>
</html>


16. Create registration form and display the details (firstaname, lastname,
organization, Hobbies, etc...) With validation.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Registration Form</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f9;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }
    .container {
      background-color: white;
      padding: 30px;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      width: 350px;
    }
    h2 {
      text-align: center;
    }
    input, select {
      width: 100%;
      padding: 10px;
      margin: 10px 0;
      border: 1px solid #ccc;
      border-radius: 4px;
    }
    button {
      width: 100%;
      padding: 10px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
    button:hover {
      background-color: #45a049;
    }
    .error {
      color: red;
      font-size: 12px;
      text-align: center;
    }
    .details {
      background-color: #f8f9fa;
      padding: 15px;
      margin-top: 20px;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
  </style>
</head>
<body>

  <div class="container">
    <h2>Registration Form</h2>
    <form id="registrationForm" onsubmit="return validateForm()">
      <input type="text" id="firstName" placeholder="First Name" required>
      <input type="text" id="lastName" placeholder="Last Name" required>
      <input type="text" id="organization" placeholder="Organization" required>
      <input type="text" id="hobbies" placeholder="Hobbies" required>
      <button type="submit">Submit</button>
      <p class="error" id="error"></p>
    </form>

    <div class="details" id="details" style="display: none;">
      <h3>Registration Details</h3>
      <p><strong>First Name:</strong> <span id="displayFirstName"></span></p>
      <p><strong>Last Name:</strong> <span id="displayLastName"></span></p>
      <p><strong>Organization:</strong> <span id="displayOrganization"></span></p>
      <p><strong>Hobbies:</strong> <span id="displayHobbies"></span></p>
    </div>
  </div>

  <script>
    function validateForm() {
      const firstName = document.getElementById("firstName").value;
      const lastName = document.getElementById("lastName").value;
      const organization = document.getElementById("organization").value;
      const hobbies = document.getElementById("hobbies").value;

      if (firstName === "" || lastName === "" || organization === "" || hobbies === "") {
        document.getElementById("error").innerText = "All fields are required!";
        return false;
      }

      // Hide the form and show the details
      document.getElementById("registrationForm").style.display = "none";
      document.getElementById("error").style.display = "none";

      document.getElementById("details").style.display = "block";
      document.getElementById("displayFirstName").innerText = firstName;
      document.getElementById("displayLastName").innerText = lastName;
      document.getElementById("displayOrganization").innerText = organization;
      document.getElementById("displayHobbies").innerText = hobbies;

      return false;  // Prevent form submission
    }
  </script>

</body>
</html>
17. Create a image gallery using Html ,CSS/Bootstrap

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Image Gallery</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .gallery img {
      width: 100%;
      height: auto;
      border-radius: 8px;
    }
    .gallery .col-md-4 {
      padding: 10px;
    }
    body{
      background: linear-gradient(to right, lightblue, lightgreen);
    }
    .col-md-4:hover img {
      transform: scale(1.05);
      transition: transform 0.3s ease;
    }
  </style>
</head>
<body>

  <div class="container">
    <h2 class="text-center my-5">Image Gallery</h2>
    <div class="row gallery">
      <div class="col-md-4">
        <img src="sofa1.jpeg" alt="Image 1" class="img-fluid">
      </div>
      <div class="col-md-4">
        <img src="sofa2.jpeg" alt="Image 2" class="img-fluid">
      </div>
      <div class="col-md-4">
        <img src="sofa3.jpeg" alt="Image 3" class="img-fluid">
      </div>
    </div>
  </div>

</body>
</html>

18. Create a page and add video in the page.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Video Page</title>
</head>
<body>

  <div style="text-align: center;">
    <h2>Watch the Video</h2>
    <video width="600" controls>
      <source src="https://www.w3schools.com/html/mov_bbb.mp4" type="video/mp4">
      Your browser does not support the video tag.
    </video>
  </div>

</body>
</html>

19.Create a notification popup.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Notification Popup</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      background-color: #f4f4f9;
      transition: background-color 0.5s ease;
    }

    .button-container {
      text-align: center;
    }

    button {
      padding: 15px 30px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 16px;
    }

    button:hover {
      background-color: #45a049;
    }

    .notification {
      background-color: #4CAF50;
      color: white;
      padding: 20px;
      position: fixed;
      bottom: 20px;
      right: 20px;
      border-radius: 5px;
      display: none;
      opacity: 0;
      transition: opacity 0.5s ease;
    }
  </style>
</head>
<body>

  <div class="button-container">
    <button onclick="showNotification()">Show Notification</button>
  </div>

  <div class="notification" id="notification">
    This is a notification message!
  </div>

  <script>
    function showNotification() {
      // Change the background color of the page
      document.body.style.backgroundColor = "#e0f7fa";

      // Show the notification
      const notification = document.getElementById("notification");
      notification.style.display = "block";
      setTimeout(() => {
        notification.style.opacity = 1;
      }, 10);

      // Hide the notification after 3 seconds
      setTimeout(() => {
        notification.style.opacity = 0;
        setTimeout(() => {
          notification.style.display = "none";
        }, 500);
      }, 3000);
    }
  </script>

</body>
</html>


20. Create and store the cookies.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Cookie Storage</title>
</head>
<body>

  <h2>Set and Get Cookies</h2>
  
  <input type="text" id="cookieName" placeholder="Enter your name">
  <button onclick="setCookie()">Set Cookie</button>
  
  <h3>Stored Cookie: <span id="cookieValue"></span></h3>

  <script>
    function setCookie() {
      const name = document.getElementById("cookieName").value;
      document.cookie = `username=${name}; path=/`;
      getCookie();
    }

    function getCookie() {
      const cookies = document.cookie.split('; ');
      let username = '';
      cookies.forEach(cookie => {
        const [key, value] = cookie.split('=');
        if (key === 'username') {
          username = value;
        }
      });
      document.getElementById("cookieValue").innerText = username;
    }

    // Display cookie value when the page loads
    window.onload = getCookie;
  </script>

</body>
</html>

24.Develop a ecommerce platform Ubercart using PHP.

CREATE DATABASE ecommerce_platform;

USE ecommerce_platform;

-- Create users table
CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL,
    address TEXT
);

-- Create products table
CREATE TABLE products (
    product_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock INT NOT NULL
);

-- Create orders table
CREATE TABLE orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    total DECIMAL(10, 2) NOT NULL,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- Create order_items table (for storing products in each order)
CREATE TABLE order_items (
    order_item_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

Index.php

<?php
session_start();

// Connect to MySQL database
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "ecommerce_platform";
$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Fetch products from the database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

// Handle add to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    // Add product to the cart
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = $quantity;
    } else {
        $_SESSION['cart'][$product_id] += $quantity;
    }
    header("Location: index.php");
    exit();
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>E-commerce Platform</title>
</head>
<body>
    <h1>Welcome to the E-commerce Platform</h1>

    <h2>Product List</h2>

    <?php while ($row = $result->fetch_assoc()) { ?>
        <div>
            <h3><?php echo $row['name']; ?></h3>
            <p><?php echo $row['description']; ?></p>
            <p>Price: $<?php echo $row['price']; ?></p>
            <form method="POST">
                <input type="hidden" name="product_id" value="<?php echo $row['product_id']; ?>">
                <input type="number" name="quantity" value="1" min="1" required>
                <button type="submit" name="add_to_cart">Add to Cart</button>
            </form>
        </div>
    <?php } ?>

    <h2>Shopping Cart</h2>
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) { ?>
        <ul>
            <?php foreach ($_SESSION['cart'] as $product_id => $quantity) { 
                // Get product details
                $product_sql = "SELECT * FROM products WHERE product_id = $product_id";
                $product_result = $conn->query($product_sql);
                $product = $product_result->fetch_assoc();
            ?>
                <li><?php echo $product['name']; ?> - Quantity: <?php echo $quantity; ?></li>
            <?php } ?>
        </ul>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>

</body>
</html>

Checkout.php

<?php
session_start();

// Connect to MySQL database
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "ecommerce_platform";
$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if cart is not empty
if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    echo "Your cart is empty. Please add products to the cart.";
    exit();
}

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $product_id => $quantity) {
    $sql = "SELECT * FROM products WHERE product_id = $product_id";
    $result = $conn->query($sql);
    $product = $result->fetch_assoc();
    $total += $product['price'] * $quantity;
}

// Handle order placement
if (isset($_POST['place_order'])) {
    $user_id = 1; // Assuming a logged-in user with ID 1
    $stmt = $conn->prepare("INSERT INTO orders (user_id, total) VALUES (?, ?)");
    $stmt->bind_param("id", $user_id, $total);
    $stmt->execute();
    $order_id = $stmt->insert_id;

    // Add order items
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $product_sql = "SELECT * FROM products WHERE product_id = $product_id";
        $product_result = $conn->query($product_sql);
        $product = $product_result->fetch_assoc();
        $stmt = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
        $stmt->bind_param("iiid", $order_id, $product_id, $quantity, $product['price']);
        $stmt->execute();
    }

    // Clear the cart after placing the order
    unset($_SESSION['cart']);

    echo "Order placed successfully!";
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <h2>Total: $<?php echo $total; ?></h2>

    <form method="POST">
        <button type="submit" name="place_order">Place Order</button>
    </form>
</body>
</html>





25.Build a grocery store application using PHP and MySQL

CREATE DATABASE grocery_store;

USE grocery_store;

-- Create users table
CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL
);

-- Create products table
CREATE TABLE products (
    product_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    stock INT NOT NULL
);

-- Create orders table
CREATE TABLE orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    total DECIMAL(10, 2) NOT NULL,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- Create order_items table (for storing products in each order)
CREATE TABLE order_items (
    order_item_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

Index.php

<?php
session_start();

// Database connection
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "grocery_store";
$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Fetch products from the database
$sql = "SELECT * FROM products";
$result = $conn->query($sql);

// Handle add to cart
if (isset($_POST['add_to_cart'])) {
    $product_id = $_POST['product_id'];
    $quantity = $_POST['quantity'];
    
    // Add product to the cart
    if (!isset($_SESSION['cart'][$product_id])) {
        $_SESSION['cart'][$product_id] = $quantity;
    } else {
        $_SESSION['cart'][$product_id] += $quantity;
    }
    header("Location: index.php");
    exit();
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Grocery Store</title>
</head>
<body>
    <h1>Welcome to the Grocery Store</h1>

    <h2>Product List</h2>

    <?php while ($row = $result->fetch_assoc()) { ?>
        <div>
            <h3><?php echo $row['name']; ?></h3>
            <p>Price: $<?php echo $row['price']; ?></p>
            <form method="POST">
                <input type="hidden" name="product_id" value="<?php echo $row['product_id']; ?>">
                <input type="number" name="quantity" value="1" min="1" required>
                <button type="submit" name="add_to_cart">Add to Cart</button>
            </form>
        </div>
    <?php } ?>

    <h2>Shopping Cart</h2>
    <?php if (isset($_SESSION['cart']) && count($_SESSION['cart']) > 0) { ?>
        <ul>
            <?php foreach ($_SESSION['cart'] as $product_id => $quantity) {
                // Get product details
                $product_sql = "SELECT * FROM products WHERE product_id = $product_id";
                $product_result = $conn->query($product_sql);
                $product = $product_result->fetch_assoc();
            ?>
                <li><?php echo $product['name']; ?> - Quantity: <?php echo $quantity; ?></li>
            <?php } ?>
        </ul>
        <a href="checkout.php">Proceed to Checkout</a>
    <?php } else { ?>
        <p>Your cart is empty.</p>
    <?php } ?>
</body>
</html>

Checkout.php

<?php
session_start();

// Database connection
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "grocery_store";
$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Check if cart is not empty
if (!isset($_SESSION['cart']) || count($_SESSION['cart']) == 0) {
    echo "Your cart is empty. Please add products to the cart.";
    exit();
}

// Calculate total price
$total = 0;
foreach ($_SESSION['cart'] as $product_id => $quantity) {
    $sql = "SELECT * FROM products WHERE product_id = $product_id";
    $result = $conn->query($sql);
    $product = $result->fetch_assoc();
    $total += $product['price'] * $quantity;
}

// Handle order placement
if (isset($_POST['place_order'])) {
    $user_id = 1; // Assuming a logged-in user with ID 1
    $stmt = $conn->prepare("INSERT INTO orders (user_id, total) VALUES (?, ?)");
    $stmt->bind_param("id", $user_id, $total);
    $stmt->execute();
    $order_id = $stmt->insert_id;

    // Add order items
    foreach ($_SESSION['cart'] as $product_id => $quantity) {
        $product_sql = "SELECT * FROM products WHERE product_id = $product_id";
        $product_result = $conn->query($product_sql);
        $product = $product_result->fetch_assoc();
        $stmt = $conn->prepare("INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)");
        $stmt->bind_param("iiid", $order_id, $product_id, $quantity, $product['price']);
        $stmt->execute();
    }

    // Clear the cart after placing the order
    unset($_SESSION['cart']);

    echo "Order placed successfully!";
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <h2>Total: $<?php echo $total; ?></h2>

    <form method="POST">
        <button type="submit" name="place_order">Place Order</button>
    </form>
</body>
</html>




26.Build a facebook website using PHP and MySQL.
Create the Database and Tables
sql
Copy
Edit
CREATE DATABASE facebook_clone;

USE facebook_clone;

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    email VARCHAR(100) UNIQUE,
    password VARCHAR(255)
);

CREATE TABLE posts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    content TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

2. db.php
php
Copy
Edit
<?php
$conn = new mysqli("localhost", "root", "", "facebook_clone");
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

3. register.php
php
Copy
Edit
<?php include("db.php"); ?>
<form method="post">
    Name: <input type="text" name="name" required><br>
    Email: <input type="email" name="email" required><br>
    Password: <input type="password" name="password" required><br>
    <input type="submit" name="register" value="Register">
</form>

<?php
if (isset($_POST['register'])) {
    $name = $_POST['name'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    $conn->query("INSERT INTO users (name, email, password) VALUES ('$name', '$email', '$password')");
    echo "Registered Successfully! <a href='login.php'>Login</a>";
}
?>

4. login.php
php
Copy
Edit
<?php include("db.php"); session_start(); ?>
<form method="post">
    Email: <input type="email" name="email" required><br>
    Password: <input type="password" name="password" required><br>
    <input type="submit" name="login" value="Login">
</form>

<?php
if (isset($_POST['login'])) {
    $email = $_POST['email'];
    $password = $_POST['password'];

    $result = $conn->query("SELECT * FROM users WHERE email='$email'");
    $user = $result->fetch_assoc();

    if ($user && password_verify($password, $user['password'])) {
        $_SESSION['user_id'] = $user['id'];
        header("Location: index.php");
    } else {
        echo "Invalid credentials!";
    }
}
?>

5. logout.php
php
Copy
Edit
<?php session_start(); session_destroy(); header("Location: login.php"); ?>

6. index.php
php
Copy
Edit
<?php include("db.php"); session_start(); if (!isset($_SESSION['user_id'])) header("Location: login.php"); ?>

<h2>Welcome to Facebook Clone</h2>
<a href="logout.php">Logout</a>

<form method="post" action="post.php">
    <textarea name="content" required placeholder="What's on your mind?"></textarea><br>
    <input type="submit" value="Post">
</form>

<h3>Feed:</h3>
<?php
$result = $conn->query("SELECT posts.content, posts.created_at, users.name FROM posts JOIN users ON posts.user_id = users.id ORDER BY posts.id DESC");
while ($row = $result->fetch_assoc()) {
    echo "<p><strong>{$row['name']}</strong>: {$row['content']} <br><small>{$row['created_at']}</small></p><hr>";
}
?>

7. post.php
php
Copy
Edit
<?php
include("db.php");
session_start();

if (isset($_POST['content']) && isset($_SESSION['user_id'])) {
    $content = $conn->real_escape_string($_POST['content']);
    $user_id = $_SESSION['user_id'];
    $conn->query("INSERT INTO posts (user_id, content) VALUES ($user_id, '$content')");
}
header("Location: index.php");
?>


27.Create a database with user information and books information and create
a webpage in which books catalogue should be dynamically loaded from
the database.



28.Develop email verification application using PHP.

<?php
// Database connection
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "email_verification";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Handle registration form submission
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['name']) && isset($_POST['email'])) {
    // Get form data
    $name = $_POST['name'];
    $email = $_POST['email'];

    // Generate verification code
    $verification_code = md5(uniqid("email_verification_", true));

    // Insert user into the database
    $stmt = $conn->prepare("INSERT INTO users (name, email, verification_code) VALUES (?, ?, ?)");
    $stmt->bind_param("sss", $name, $email, $verification_code);

    if ($stmt->execute()) {
        // Send verification email
        $to = $email;
        $subject = "Email Verification";
        $message = "Click the link to verify your email: 
                    http://localhost/verify_email.php?code=" . $verification_code;
        $headers = "From: no-reply@example.com";

        if (mail($to, $subject, $message, $headers)) {
            echo "Registration successful! Please check your email to verify your account.";
        } else {
            echo "Failed to send verification email.";
        }
    } else {
        echo "Error: " . $stmt->error;
    }

    $stmt->close();
}

// Handle email verification
if (isset($_GET['code'])) {
    // Get verification code from the URL
    $verification_code = $_GET['code'];

    // Check if the code exists in the database
    $stmt = $conn->prepare("SELECT * FROM users WHERE verification_code = ?");
    $stmt->bind_param("s", $verification_code);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        // Verify the user
        $user = $result->fetch_assoc();
        if (!$user['email_verified']) {
            // Update user status to verified
            $stmt_update = $conn->prepare("UPDATE users SET email_verified = 1 WHERE verification_code = ?");
            $stmt_update->bind_param("s", $verification_code);
            if ($stmt_update->execute()) {
                echo "Your email has been successfully verified!";
            } else {
                echo "Error verifying email.";
            }
        } else {
            echo "Your email is already verified.";
        }
    } else {
        echo "Invalid verification link.";
    }

    $stmt->close();
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Email Verification</title>
</head>
<body>
    <h2>User Registration</h2>
    <form action="" method="POST">
        <input type="text" name="name" placeholder="Enter your name" required>
        <input type="email" name="email" placeholder="Enter your email" required>
        <button type="submit">Register</button>
    </form>
</body>
</html>



29.Develop Web application which makes use of PHP programming

<?php
// Database connection
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "task_manager";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Add Task
if (isset($_POST['add_task'])) {
    $task_name = $_POST['task_name'];

    // Insert task into database
    $stmt = $conn->prepare("INSERT INTO tasks (task_name) VALUES (?)");
    $stmt->bind_param("s", $task_name);
    if ($stmt->execute()) {
        echo "Task added successfully!";
    } else {
        echo "Error adding task: " . $stmt->error;
    }
    $stmt->close();
}

// Mark Task as Completed
if (isset($_GET['mark_completed'])) {
    $task_id = $_GET['mark_completed'];

    // Update task status to 'completed'
    $stmt = $conn->prepare("UPDATE tasks SET status = 'completed' WHERE task_id = ?");
    $stmt->bind_param("i", $task_id);
    $stmt->execute();
    $stmt->close();
}

// Delete Task
if (isset($_GET['delete_task'])) {
    $task_id = $_GET['delete_task'];

    // Delete task from database
    $stmt = $conn->prepare("DELETE FROM tasks WHERE task_id = ?");
    $stmt->bind_param("i", $task_id);
    if ($stmt->execute()) {
        echo "Task deleted successfully!";
    } else {
        echo "Error deleting task: " . $stmt->error;
    }
    $stmt->close();
}

// Get all tasks
$sql = "SELECT * FROM tasks";
$result = $conn->query($sql);

// Close the connection
$conn->close();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Manager</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .task {
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 10px;
        }
        .completed {
            text-decoration: line-through;
            color: gray;
        }
        .actions a {
            margin-right: 10px;
            text-decoration: none;
            color: blue;
        }
        .actions a.delete {
            color: red;
        }
    </style>
</head>
<body>
    <h1>Task Manager</h1>

    <!-- Add Task Form -->
    <form action="" method="POST">
        <input type="text" name="task_name" placeholder="Enter task" required>
        <button type="submit" name="add_task">Add Task</button>
    </form>

    <h2>Tasks</h2>

    <?php
    // Display tasks
    if ($result->num_rows > 0) {
        while ($row = $result->fetch_assoc()) {
            echo "<div class='task'>";
            echo "<span class='" . ($row['status'] == 'completed' ? 'completed' : '') . "'>" . $row['task_name'] . "</span>";
            echo "<div class='actions'>";
            if ($row['status'] == 'pending') {
                echo "<a href='?mark_completed=" . $row['task_id'] . "'>Mark as Completed</a>";
            }
            echo "<a href='?delete_task=" . $row['task_id'] . "' class='delete'>Delete</a>";
            echo "</div>";
            echo "</div>";
        }
    } else {
        echo "<p>No tasks available.</p>";
    }
    ?>
</body>
</html>

CREATE DATABASE task_manager;

USE task_manager;

CREATE TABLE tasks (
    task_id INT AUTO_INCREMENT PRIMARY KEY,
    task_name VARCHAR(255) NOT NULL,
    status ENUM('pending', 'completed') DEFAULT 'pending'
);



30.Design restaurant data entry form using Table Layout and show different
events using activity class.

33.Install Ruby Environment Setup and Write a Ruby program which accept
the user's first and last name and print them in reverse order with a space
between them.

34.Write a Ruby Script to send an Email to a specific User.





